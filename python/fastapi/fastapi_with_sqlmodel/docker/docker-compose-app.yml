version: "3.9"

services:


  #############################################################################
  # Backend                                                                   #
  #############################################################################

  heroes-api:

    # The base relative directory for the context and dockerfile options in a `docker-compose.yml` file
    # is the directory where the `docker-compose.yml` file is located, not the directory
    # from which the `docker-compose up` command is executed.
    build:
      context: ../src                            # Relative to the directory that contains the `docker-compose.yml` file
      dockerfile: ../docker/fastapi.dockerfile   # Relative to the context directory

    restart: unless-stopped

    environment:
      - SQLITE_DATABASE_URL=sqlite:////var/lib/heroes/heroes.sqlite

    labels:
      # Enable Traefik for this specific "heroes-api" service
      - traefik.enable=true

      # Define the port inside of the Docker service to use
      - traefik.http.services.heroes-api.loadbalancer.server.port=80

      # Make Traefik use this domain in HTTP
      - traefik.http.routers.heroes-api-http.entrypoints=http
      - traefik.http.routers.heroes-api-http.rule=Host(`${APPLICATION_API_FQDN}`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))

      # Use the traefik-public network (declared below)
      - traefik.docker.network=traefik-public

      # Make Traefik use this domain in HTTPS
      - traefik.http.routers.heroes-api-https.entrypoints=https
      - traefik.http.routers.heroes-api-https.rule=Host(`${APPLICATION_API_FQDN}`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))
      - traefik.http.routers.heroes-api-https.tls=true

      # Use the "le" (Let's Encrypt) resolver
      - traefik.http.routers.heroes-api-https.tls.certresolver=le

      # http-redirect middleware will redirect every http request to https
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true

      # Middleware to redirect HTTP to HTTPS
      - traefik.http.routers.heroes-api-http.middlewares=https-redirect
      - traefik.http.routers.heroes-api-https.middlewares=admin-auth

    volumes:
      # Add a mounted volume for the gradio-webui database (to make it persistent)
      - "${APPLICATION_DATABASE_PATH}:/var/lib/heroes/"
      # # Add a mounted volume for the gradio-webui log files
      # - "${APPLICATION_LOG_PATH}:/var/log/heroes/"

    # # Comment the following two lines should stay commented as ports are managed by Traefik... To test the service without Traefik, use the docker-compose-app.override.yml file !
    # ports:
    #   - "80:80"

    networks:
      # Use the public network created to be shared between Traefik and
      # any other service that needs to be publicly available with HTTPS
      - traefik-public


  #############################################################################
  # Frontend                                                                  #
  #############################################################################

  heroes-frontend:
    
    # The official Nginx docker image
    image: nginx:1.25.4

    restart: unless-stopped

    labels:
      # Enable Traefik for this specific "heroes-frontend" service
      - traefik.enable=true

      # Define the port inside of the Docker service to use
      - traefik.http.services.heroes-frontend.loadbalancer.server.port=80

      # Make Traefik use this domain in HTTP
      - traefik.http.routers.heroes-frontend-http.entrypoints=http
      - traefik.http.routers.heroes-frontend-http.rule=Host(`${APPLICATION_FRONTEND_FQDN}`)

      # Use the traefik-public network (declared below)
      - traefik.docker.network=traefik-public

      # Make Traefik use this domain in HTTPS
      - traefik.http.routers.heroes-frontend-https.entrypoints=https
      - traefik.http.routers.heroes-frontend-https.rule=Host(`${APPLICATION_FRONTEND_FQDN}`)
      - traefik.http.routers.heroes-frontend-https.tls=true

      # Use the "le" (Let's Encrypt) resolver
      - traefik.http.routers.heroes-frontend-https.tls.certresolver=le

      # Middleware to redirect HTTP to HTTPS
      - traefik.http.routers.heroes-frontend-http.middlewares=https-redirect
      - traefik.http.routers.heroes-frontend-https.middlewares=admin-auth

    volumes:
    - "../frontend:/usr/share/nginx/html:ro"
    # - "${APPLICATION_FRONTEND_PATH}:/usr/share/nginx/html:ro"

    # # Comment the following two lines should stay commented as ports are managed by Traefik... To test the service without Traefik, use the docker-compose-app.override.yml file !
    # ports:
    #   - "80:80"

    networks:
      # Use the public network created to be shared between Traefik and
      # any other service that needs to be publicly available with HTTPS
      - traefik-public


networks:
  # Use the previously created public network "traefik-public", shared with other
  # services that needs to be publicly available via this Traefik
  traefik-public:
    external: true


volumes:
  heroes-database:
  heroes-logs:
