#!/usr/bin/env python3

# Src: https://sqlmodel.tiangolo.com/tutorial/fastapi/simple-hero-api/

# To run this code, type: `uvicorn main:app`

from contextlib import asynccontextmanager
from fastapi import FastAPI
from sqlmodel import Field, Session, SQLModel, create_engine, select


# Define the Hero model
class Hero(SQLModel, table=True):
    id: int | None = Field(default=None, primary_key=True)
    name: str = Field(index=True)
    secret_name: str
    age: int | None = Field(default=None, index=True)


# Create the database engine
engine = create_engine(
    url="sqlite:///srv/db/database.sqlite",     # TODO: use environment variable for database path (generated by Ansible)
    echo=True,
    connect_args={"check_same_thread": False}
)


# Create Database and Tables on startup
# C.f. https://fastapi.tiangolo.com/advanced/events/#async-context-manager
@asynccontextmanager
async def lifespan(app: FastAPI):
    # Create the database if it doesn't exist
    SQLModel.metadata.create_all(engine)
    yield


# Create the FastAPI app
app = FastAPI(lifespan=lifespan)


# Create Heroes Path Operation
@app.post("/heroes/")
def create_hero(hero: Hero):
    with Session(engine) as session:
        session.add(hero)
        session.commit()
        session.refresh(hero)
        return hero


# Read Heroes Path Operation
@app.get("/heroes/")
def read_heroes():
    with Session(engine) as session:
        heroes = session.exec(select(Hero)).all()
        return heroes
